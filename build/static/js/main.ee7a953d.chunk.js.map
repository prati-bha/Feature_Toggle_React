{"version":3,"sources":["serviceWorker.js","Constants/urlConstants.js","Requests/apiRequestFunction.js","Components/SignUp.js","Components/Login.js","Components/Dashboard.js","Components/PrivateRoute.js","Components/LoginRoute.js","Components/Profile.js","Components/DisplayStaticData.js","Components/AboutUs.js","Components/TandC.js","Components/privacyPolicy.js","Components/Logout.js","Components/AppLanding.js","Components/NavigationBar.js","Components/Routes.js","index.js"],"names":["Boolean","window","location","hostname","match","domain","signupApi","loginApi","aboutUsApi","termsAndConditionsApi","privacyAndPolicyApi","apiRequest","url","option","a","options","method","headers","data","body","JSON","stringify","fetch","res","status","parseJson","apiData","json","SignUp","history","useHistory","useState","userName","setUserName","passWord","setPassWord","username","password","handleClick","event","message","console","log","alert","push","className","type","value","onChange","target","disabled","onClick","Login","preventDefault","localStorage","setItem","token","userWithoutpassword","_id","featureName","Dashboard","getItem","PrivateRoute","props","to","pathname","Profile","DisplayStaticData","loading","title","description","AboutUs","isLoading","setTitle","setDescription","useEffect","TandC","PrivacyPolicy","Logout","removeItem","AppLanding","MenuLinks","state","linksUnauthorized","text","link","linksAuthorized","links","this","map","i","number","key","toString","ref","aria-hidden","href","number2","menuStatus","id","React","Component","Menu","isOpen","_menuToggle","bind","_handleDocumentClick","document","addEventListener","removeEventListener","e","refs","root","contains","setState","stopPropagation","Routes","exact","path","LoginRoute","component","ReactDOM","render","context","userId","customStrategyExecutors","par","executor","userIds","split","includes","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.ee7a953d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/*localhost apis*/\n\n// export const domain = \"http://localhost:4000\";\n// export const signupApi = `${domain}/auth/register`;\n// export const loginApi = `${domain}/auth/authenticate`;\n// export const aboutUsApi = `${domain}/aboutUs`;\n// export const termsAndConditionsApi = `${domain}/terms-conditions`;\n// export const privacyAndPolicyApi = `${domain}/privacy-policy`;\n\n/*Mahima's pc apis*/\n\nexport const domain = \"http://192.168.2.69:4000\";\nexport const signupApi = `${domain}/auth/register`;\nexport const loginApi = `${domain}/auth/authenticate`;\nexport const aboutUsApi = `${domain}/aboutUs`;\nexport const termsAndConditionsApi = `${domain}/terms-conditions`;\nexport const privacyAndPolicyApi = `${domain}/privacy-policy`;\n\n/*unleash url*/\nexport const unleashUrl = \"http://192.168.3.69:4242\";","const apiRequest = async (url, option) => {\n    let apiData;\n    let options = {\n        method: option.method,\n        headers: { 'Content-Type': 'application/json' }\n    }\n    if (option.data) {\n        options.body = JSON.stringify(option.data)\n    }\n    const res = await fetch(url, options)\n\n    if (res.status === 401) {\n        const data = await parseJson(res);\n        apiData = data;\n    }\n    if (res.status === 200) {\n        const data = await parseJson(res);\n        apiData = data;\n    }\n    if (res.status === 500) {\n        const data = await parseJson(res);\n        apiData = data;\n\n    }\n    if (res.status === 400) {\n        const data = await parseJson(res);\n        apiData = data;\n    }\n    return apiData\n\n\n}\n\nconst parseJson = (data) => {\n    let apiData = data.json();\n    return apiData\n}\nexport default apiRequest;\n","import React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport '../App.scss';\nimport { signupApi } from '../Constants/urlConstants';\nimport apiRequest from '../Requests/apiRequestFunction';\n\nconst SignUp = () => {\n    const history = useHistory();\n    const [userName, setUserName] = useState(\"\");\n    const [passWord, setPassWord] = useState(\"\");\n    const data = { username: userName, password: passWord }\n    const handleClick = async (event) => {\n\n        const apiData = await apiRequest(signupApi, { data, method: \"POST\" });\n        if (apiData.message.status === 0) {\n            console.log(apiData.message)\n            alert(apiData.message.message);\n            setUserName(\"\");\n            setPassWord(\"\");\n        }\n        if (apiData.status === 1) {\n            history.push('/login');\n        }\n\n    }\n\n    return (\n        <div>\n            <div className=\"formCenter\">\n                <div className=\"signUpContainer\">\n                    <div className=\"signUpHeader\">Sign Up</div>\n                    <div className=\"signUpContent\">\n                        <div>\n                            Username: &nbsp;&nbsp;&nbsp;\n                        <input type=\"text\" className=\"inputDesign\" value={userName} onChange={(event) => { setUserName(event.target.value) }} />\n                        </div>\n                        <div>\n                            Password: &nbsp;&nbsp;&nbsp;\n                        <input type=\"password\" className=\"inputDesign\" value={passWord} onChange={(event) => { setPassWord(event.target.value) }} />\n                        </div>\n                        <button disabled={userName === '' || passWord === ''} className=\"buttonDesign\" onClick={handleClick}>Submit</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport {\n    SignUp,\n}","import React, { useState } from 'react';\nimport '../App.scss';\nimport { useHistory } from \"react-router-dom\";\nimport { loginApi } from '../Constants/urlConstants';\nimport apiRequest from '../Requests/apiRequestFunction';\nimport { FeatureToggle } from 'unleash-client-react';\n\n\nconst Login = () => {\n    const history = useHistory();\n    const [userName, setUserName] = useState(\"\");\n    const [passWord, setPassWord] = useState(\"\");\n    const data = { username: userName, password: passWord }\n    const handleClick = async (event) => {\n        event.preventDefault();\n        const apiData = await apiRequest(loginApi, { data, method: \"POST\" });\n        if (apiData.status === 0) {\n            alert(apiData.message)\n        }\n        else {\n            localStorage.setItem('token', apiData.token);\n            localStorage.setItem('userId', apiData.userWithoutpassword._id);\n            localStorage.setItem('userName', apiData.userWithoutpassword.username);\n            history.push('/dashboard');\n        }\n    }\n\n\n    return (\n        <FeatureToggle featureName=\"login\">\n\n            <div className=\"formCenter\">\n                <div className=\"signUpContainer\">\n                    <div className=\"signUpHeader\">Login</div>\n                    <div className=\"signUpContent\">\n                        <div>\n                            Username: &nbsp;&nbsp;&nbsp;\n                <input type=\"text\" className=\"inputDesign\" value={userName} onChange={(event) => { setUserName(event.target.value) }} />\n                        </div>\n                        <div>\n                            Password: &nbsp;&nbsp;&nbsp;\n                <input type=\"password\" className=\"inputDesign\" value={passWord} onChange={(event) => { setPassWord(event.target.value) }} />\n                        </div>\n                        <button disabled={userName === '' || passWord === ''} className=\"buttonDesign\" type=\"submit\" onClick={handleClick}>Submit</button>\n\n                    </div>\n                </div>\n            </div>\n        </FeatureToggle>\n    )\n}\nexport default Login","import React, { } from 'react';\nimport '../App.scss';\nimport { FeatureToggle } from 'unleash-client-react';\nconst Dashboard = () => {\n\n\n    return (\n        <FeatureToggle featureName=\"Dashboard\">\n            <h1 className=\"App\">Hello {localStorage.getItem(\"userName\")}</h1>\n        </FeatureToggle >\n    )\n}\nexport default Dashboard","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nconst PrivateRoute = (props) => {\n    return (!(localStorage.getItem('token')) ?\n        <Redirect to={{ pathname: '/login' }} /> : <Route {...props} />);\n};\nexport default PrivateRoute","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nconst PrivateRoute = (props) => {\n    return ((localStorage.getItem('token')) ? <Redirect to={{ pathname: '/' }} /> :\n        <Route {...props} />);\n};\nexport default PrivateRoute","import React from 'react'\nconst Profile = () => {\n    return (\n        <h1>User Profile</h1>\n    )\n}\nexport default Profile","import React from 'react';\nimport \"../App.scss\"\nconst DisplayStaticData = (props) => {\n    return (\n        <div className=\"fontFamilyRoboto textJustified\">\n            {props.loading ? <div> <h1>Data is Loading </h1> </div> : <div> <h1>{props.title}</h1><h1> {props.description}</h1></div>}\n        </div >\n    )\n}\nexport default DisplayStaticData;","import React, { useEffect, useState } from 'react'\nimport DisplayStaticData from \"../Components/DisplayStaticData\";\nimport { aboutUsApi } from '../Constants/urlConstants';\nimport apiRequest from '../Requests/apiRequestFunction';\nimport \"../App.scss\"\nimport { FeatureToggle } from 'unleash-client-react';\nconst AboutUs = () => {\n    const [loading, isLoading] = useState(true);\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    useEffect(() => {\n        (async function fetchData() {\n            const apiData = await apiRequest(aboutUsApi, { method: \"GET\" });\n            setTitle(apiData.title);\n            setDescription(apiData.description);\n            isLoading(false);\n        })()\n    }, [])\n    return (\n        <FeatureToggle featureName=\"aboutus\">\n            <DisplayStaticData loading={loading} title={title} description={description} />\n        </FeatureToggle>\n    )\n\n}\nexport default AboutUs","import React, { useEffect, useState } from 'react'\nimport \"../App.scss\"\nimport { termsAndConditionsApi } from '../Constants/urlConstants';\nimport apiRequest from '../Requests/apiRequestFunction';\nimport DisplayStaticData from '../Components/DisplayStaticData'\nconst TandC = () => {\n    const [loading, isLoading] = useState(true);\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    useEffect(() => {\n\n        (async function fetchData() {\n            const apiData = await apiRequest(termsAndConditionsApi, { method: \"GET\" });\n            setTitle(apiData.title);\n            setDescription(apiData.description);\n            isLoading(false);\n        })()\n\n\n\n    }, [])\n    return (\n        <div>\n            <DisplayStaticData loading={loading} title={title} description={description} />\n        </div>\n    )\n\n}\nexport default TandC","import React, { useEffect, useState } from 'react'\nimport { privacyAndPolicyApi } from '../Constants/urlConstants';\nimport apiRequest from '../Requests/apiRequestFunction';\nimport DisplayStaticData from \"../Components/DisplayStaticData\";\nimport \"../App.scss\"\nconst PrivacyPolicy = () => {\n    const [loading, isLoading] = useState(true);\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n\n    useEffect(() => {\n        (async function fetchData() {\n            const apiData = await apiRequest(privacyAndPolicyApi, { method: \"GET\" });\n            setTitle(apiData.title);\n            setDescription(apiData.description);\n            isLoading(false);\n        })()\n    }, [])\n    return (\n        <div>\n\n            <DisplayStaticData loading={loading} title={title} description={description} />\n        </div>\n    )\n\n}\nexport default PrivacyPolicy","import React from 'react';\nimport { Redirect } from 'react-router-dom'\nimport '../App.scss';\n\nconst Logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userName');\n    localStorage.removeItem('userId');\n    return (\n        <Redirect to={{ pathname: '/' }} />\n    )\n}\nexport default Logout","import React from 'react';\nconst AppLanding = () => {\n\n\n    return (\n        <div>\n            <h1 className=\"App\">App Landing Page</h1>\n        </div >\n    )\n}\nexport default AppLanding","import React from 'react';\nimport '../App.scss';\nclass MenuLinks extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            linksUnauthorized: [{\n                text: 'Home',\n                link: '/',\n\n            }, {\n                text: 'Sign Up',\n                link: '/signup',\n\n            }, {\n                text: 'Login',\n                link: '/login',\n            },\n            {\n                text: 'T and C',\n                link: '/tandc',\n            },\n            {\n                text: 'About Us',\n                link: '/aboutus',\n            }, {\n                text: 'Privacy Policy',\n                link: '/privacypolicy',\n            }\n            ],\n            linksAuthorized: [\n                {\n                    text: 'Home',\n                    link: '/',\n\n                },\n                {\n                    text: 'Dashboard',\n                    link: '/dashboard',\n                },\n                {\n                    text: 'T and C',\n                    link: '/tandc',\n                },\n                {\n                    text: 'About Us',\n                    link: '/aboutus',\n\n                },\n                {\n                    text: 'Privacy Policy',\n                    link: '/privacypolicy',\n                },\n                {\n                    text: 'Log Out',\n                    link: '/logout',\n                }\n            ]\n        }\n    }\n    render() {\n        let links = localStorage.getItem('token') ? (this.state.linksAuthorized.map((link, i, number) =>\n            <li key={i.toString()} ref={i + 1}><i aria-hidden=\"true\" >\n            </i><a href={link.link} >{link.text}</a></li>)) :\n            (this.state.linksUnauthorized.map((link, i, number2) =>\n                <li key={i.toString()} ref={i + 1}><i aria-hidden=\"true\" ></i><a href={link.link} >{link.text}</a></li>));\n\n        return (\n\n            <div className={this.props.menuStatus} id='menu'>\n\n                <ul>\n                    {links}\n                </ul>\n            </div>\n        )\n    }\n}\n\nclass Menu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false\n        }\n        this._menuToggle = this._menuToggle.bind(this);\n        this._handleDocumentClick = this._handleDocumentClick.bind(this);\n    }\n    componentDidMount() {\n        document.addEventListener('click', this._handleDocumentClick, false);\n    }\n    componentWillUnmount() {\n        document.removeEventListener('click', this._handleDocumentClick, false);\n    }\n    _handleDocumentClick(e) {\n        if (!this.refs.root.contains(e.target) && this.state.isOpen === true) {\n            this.setState({\n                isOpen: false\n            });\n        };\n    }\n    _menuToggle(e) {\n        e.stopPropagation();\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n    render() {\n        let menuStatus = this.state.isOpen ? 'isopen' : '';\n\n        return (\n            <div ref=\"root\">\n                <div className=\"menubar\">\n                    <div className=\"hambclicker\" onClick={this._menuToggle}></div>\n                    <div id=\"hambmenu\" className={menuStatus}><span></span><span></span><span></span><span></span></div>\n                </div>\n                <MenuLinks menuStatus={menuStatus} />\n            </div>\n        )\n    }\n}\n\nexport default Menu","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport React from 'react';\nimport { SignUp } from '../Components/SignUp';\nimport Login from '../Components/Login';\nimport Dashboard from '../Components/Dashboard';\nimport PrivateRoute from '../Components/PrivateRoute';\nimport LoginRoute from '../Components/LoginRoute';\nimport Profile from '../Components/Profile';\nimport AboutUs from \"./AboutUs\";\nimport TandC from \"./TandC\";\nimport PrivacyPolicy from \"./privacyPolicy\";\nimport Logout from \"./Logout\";\nimport AppLanding from \"./AppLanding\";\nimport Menu from \"./NavigationBar\";\nconst Routes = () => {\n\n    return (\n        <div>\n            <Menu />\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\"><AppLanding /></Route>\n                    <LoginRoute path=\"/signup\"><SignUp /></LoginRoute>\n                    <LoginRoute path=\"/login\"><Login /></LoginRoute>\n                    <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n                    <Route path=\"/aboutus\" component={AboutUs} />\n                    <Route path=\"/tandc\" component={TandC} />\n                    <Route path=\"/privacypolicy\" component={PrivacyPolicy} />\n                    <LoginRoute path=\"/profile\"><Profile /></LoginRoute>\n                    <Route path=\"/logout\" component={Logout} />\n                    <Route path=\"*\"><Login /></Route>\n                </Switch>\n            </Router >\n        </div>\n\n    )\n}\n\nexport default Routes","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Routes from './Components/Routes';\nimport { UnleashProvider } from \"unleash-client-react\";\nimport { unleashUrl } from \"./Constants/urlConstants\";\nReactDOM.render(\n    <UnleashProvider url={unleashUrl}\n        context={{\n            userId: localStorage.getItem(\"userId\")\n        }}\n        customStrategyExecutors={\n            {\n                'default': (par, executor) => {\n                    return true;\n                },\n                'userWithId': (par, executor) => {\n                    const userArray = par.userIds.split(\",\");\n                    return (userArray.includes(executor.userId))\n                }\n            }}>\n        <Routes />\n    </UnleashProvider >, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}